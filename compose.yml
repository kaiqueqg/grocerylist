version: '3'
services:
  #sql_server_grocerylist:
  # image: mcr.microsoft.com/mssql/server
  # ports: 
  #  - 1433:1433
  # environment:
  #  - ACCEPT_EULA=Y
  #  - MSSQL_SA_PASSWORD=Passw0rd
  # volumes:
  #  - /data/db:/data/db

  #adminer_grocerylist:
  #  image: adminer
  #  restart: always
  #  depends_on:
  #  - sql_server_grocerylist
  #  ports:
  #  - 8080:8080

  #es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
  #   container_name: es01
  #   environment:
  #    - bootstrap.memory_lock=true
  #    - node.name=es01
  #    - cluster.name=es-docker-cluster
  #    - cluster.initial_master_nodes=es01
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #    #- discovery.type=single-node
  #    #- ELASTIC_PASSWORD=changeme
  #    #- xpack.security.enabled=true
  #   ulimits:
  #      memlock:
  #         soft:  -1
  #         hard:  -1
  #   volumes:
  #    - data01:/usr/share/elasticsearch/data
  #   ports: ['9200:9200']
  #   networks: ['stack']

  #kibana:
  #  image: docker.elastic.co/kibana/kibana:7.9.0
  #  ports: ['5601:5601']
  #  environment:
  #     ELASTICSEARCH_URL: http://es01:9200
  #     ELASTICSEARCH_HOSTS: http://es01:9200
  #  #- ELASTICSEARCH_USERNAME=elastic
  #  #- ELASTICSEARCH_PASSWORD=changeme
  #  networks: ['stack']
  #  links: ['es01']
  #  depends_on: ['es01']

  mongodb:
    image: mongo
    ports: ['27017:27017']
    volumes: ['mongodb_data:/data/db']
    environment:
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=passw0rd
    networks: ['grocerylist-network']

  # compass:
  #  image: mongo-express
  #  ports: ['8081:8081']
  #  environment:
  #   - MONGOCLIENT_CONNECT=mongodb://admin:passw0rd@mongodb:27017
  #  networks: ['grocerylist-network']
  #  depends_on: ['mongodb']

  # redis:
  #   image: redis
  #   ports: ['6379:6379']
  #   networks: ['grocerylist-network']

  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   environment:
  #    - REDIS_HOSTS=redis
  #   ports: ['8081:8081']
  #   depends_on: ['redis']
  #   networks: ['grocerylist-network']

  net:
     image: kaiqueqg/grocerylist-api
     ports:
      - 5000:5000
      - 5001:5001
     environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_HTTP_PORT=https://+:5001
      - MONGO_CONNECTION_STRING=mongodb://admin:passw0rd@mongodb:27017/
      - REDIS_CONNECTION_STRING=redis:6379
      - REDIS_INSTANCE_NAME=redisinstance
      - REDIS_IS_ON=false
     volumes:
      - /myappdata:/app/data
     networks: ['grocerylist-network']
     depends_on: ['mongodb']

  front:
   image: kaiqueqg/grocerylist-front
   ports: ['3000:3000']

volumes:
   data01:
      driver: local
   mongodb_data:

networks:
  stack: {}
  grocerylist-network: